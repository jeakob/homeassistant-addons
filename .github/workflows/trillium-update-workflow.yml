name: Trillium Update Upstream Version

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *' # every day at 6:00 UTC

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install yq (YAML CLI)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl
          sudo curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Get latest release metadata from triliumnext/notes
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const res = await github.rest.repos.getLatestRelease({
              owner: 'triliumnext',
              repo: 'notes'
            });
            core.setOutput("tag", res.data.tag_name);
            core.setOutput("body", res.data.body);

      - name: Save changelog to file
        run: |
          echo "# Changelog for TriliumNext Notes ${{ steps.get_release.outputs.tag }}" > changelog.txt
          echo "" >> changelog.txt
          echo "${{ steps.get_release.outputs.body }}" >> changelog.txt

      - name: Check & update version files
        env:
          LATEST_VERSION: ${{ steps.get_release.outputs.tag }}
        run: |
          ADDON_DIR="./trillium"
          CURRENT_VERSION=$(jq -r '.upstream_version' "$ADDON_DIR/updater.json")

          echo "Current: $CURRENT_VERSION | Latest: $LATEST_VERSION"

          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Updating files to version $LATEST_VERSION"

            TODAY=$(date +'%d-%m-%Y')

            # Update updater.json
            jq --arg v "$LATEST_VERSION" --arg d "$TODAY" \
              '.upstream_version = $v | .last_update = $d' "$ADDON_DIR/updater.json" > tmp && mv tmp "$ADDON_DIR/updater.json"

            # Update config.yaml
            yq -i ".version = \"$LATEST_VERSION\" | .upstream = \"$LATEST_VERSION\"" "$ADDON_DIR/config.yaml"

            # Update build.yaml
            yq -i ".build_from.amd64 = \"docker.io/triliumnext/notes:$LATEST_VERSION\" |
                   .build_from.aarch64 = \"docker.io/triliumnext/notes:$LATEST_VERSION\"" "$ADDON_DIR/build.yaml"

            # Overwrite main changelog
            cp changelog.txt "$ADDON_DIR/CHANGELOG.md"

            # Git commit & push
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add "$ADDON_DIR/updater.json" "$ADDON_DIR/config.yaml" "$ADDON_DIR/build.yaml" "$ADDON_DIR/CHANGELOG.md"
            git commit -m "Update Trillium addon to upstream version $LATEST_VERSION"
            git push
          else
            echo "No update needed"
          fi
