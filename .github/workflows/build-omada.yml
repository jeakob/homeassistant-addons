name: Build and Push Custom Omada Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fetch upstream Dockerfile and missing files
        id: fetch
        run: |
          mkdir -p homeassistant-addons/omada-controller/mbentley

          # Fetch upstream Dockerfile
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/Dockerfile.v5.x -o Dockerfile.upstream

          # Extract INSTALL_VER from upstream Dockerfile
          INSTALL_VER=$(grep 'ARG INSTALL_VER=' Dockerfile.upstream | cut -d'"' -f2)
          echo "INSTALL_VER=$INSTALL_VER" >> $GITHUB_ENV
          echo "Using INSTALL_VER: $INSTALL_VER"

          # Fetch missing scripts
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/install.sh -o homeassistant-addons/omada-controller/install.sh
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/entrypoint.sh -o homeassistant-addons/omada-controller/entrypoint.sh
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/healthcheck.sh -o homeassistant-addons/omada-controller/healthcheck.sh
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/mbentley/install.sh -o homeassistant-addons/omada-controller/mbentley/install.sh
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/mbentley/entrypoint-5.x.sh -o homeassistant-addons/omada-controller/mbentley/entrypoint-5.x.sh

          # Generate Dockerfile dynamically with the fetched version
          cat <<EOF > homeassistant-addons/omada-controller/Dockerfile
FROM mbentley/ubuntu:20.04

LABEL maintainer="Matt Bentley <mbentley@mbentley.net>"
LABEL org.opencontainers.image.source="https://github.com/mbentley/docker-omada-controller"

COPY ./ /

ARG INSTALL_VER=$INSTALL_VER
ARG TARGETARCH=amd64
ARG BUILD_ARCH
ARG ARCH=amd64
ARG NO_MONGODB=false

RUN chmod +x /install.sh && /install.sh && rm -f /install.sh

WORKDIR /opt/tplink/EAPController/lib
EXPOSE 29810/udp 29811 29812 29813
VOLUME ["/data"]
ENTRYPOINT ["/entrypoint.sh"]
CMD ["/usr/bin/java", "-server", "-Xms128m", "-Xmx1024m"]
EOF

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          INSTALL_VER: ${{ env.INSTALL_VER }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "Using INSTALL_VER=${INSTALL_VER}"

          docker build \
            --build-arg ARCH=amd64 \
            --build-arg TARGETARCH=amd64 \
            --build-arg BUILD_ARCH=amd64 \
            --platform linux/amd64 \
            -t ${DOCKERHUB_USERNAME}/custom-omada:${INSTALL_VER} \
            -t ${DOCKERHUB_USERNAME}/custom-omada:latest \
            ./homeassistant-addons/omada-controller

          docker push ${DOCKERHUB_USERNAME}/custom-omada:${INSTALL_VER}
          docker push ${DOCKERHUB_USERNAME}/custom-omada:latest
