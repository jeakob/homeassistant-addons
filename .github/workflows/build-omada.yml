name: Build and Push Custom Omada Image

on:
#  push:
 #   branches:
  #    - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Fetch upstream Dockerfile and missing files
        id: fetch
        run: |
          mkdir -p homeassistant-addons/omada-controller/mbentley
          
          # Fetch upstream Dockerfile
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/Dockerfile.v5.x -o Dockerfile.upstream
          
          # Extract INSTALL_VER from upstream Dockerfile (handle different formats)
          INSTALL_VER=$(grep 'ARG INSTALL_VER=' Dockerfile.upstream | sed 's/ARG INSTALL_VER=//g' | tr -d '"' | head -1)
          if [ -z "$INSTALL_VER" ]; then
            echo "Could not extract INSTALL_VER, using default"
            INSTALL_VER="5.13.30.8"
          fi
          echo "INSTALL_VER=$INSTALL_VER" >> $GITHUB_ENV
          echo "Using INSTALL_VER: $INSTALL_VER"
          
          # Fetch missing scripts with error handling
          echo "Fetching required scripts..."
          
          # Make scripts executable after downloading
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/install.sh -o homeassistant-addons/omada-controller/install.sh
          chmod +x homeassistant-addons/omada-controller/install.sh
          
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/entrypoint.sh -o homeassistant-addons/omada-controller/entrypoint.sh
          chmod +x homeassistant-addons/omada-controller/entrypoint.sh
          
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/healthcheck.sh -o homeassistant-addons/omada-controller/healthcheck.sh
          chmod +x homeassistant-addons/omada-controller/healthcheck.sh
          
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/mbentley/install.sh -o homeassistant-addons/omada-controller/mbentley/install.sh
          chmod +x homeassistant-addons/omada-controller/mbentley/install.sh
          
          curl -sSL https://raw.githubusercontent.com/mbentley/docker-omada-controller/master/mbentley/entrypoint-5.x.sh -o homeassistant-addons/omada-controller/mbentley/entrypoint-5.x.sh
          chmod +x homeassistant-addons/omada-controller/mbentley/entrypoint-5.x.sh
          
          # Generate Dockerfile dynamically with the fetched version
          cat > homeassistant-addons/omada-controller/Dockerfile << 'EOF'
          FROM mbentley/ubuntu:20.04
          LABEL maintainer="Matt Bentley <matt@bentley.link>"
          LABEL org.opencontainers.image.source="https://github.com/mbentley/docker-omada-controller"
          COPY ./ /
          ARG INSTALL_VER
          ARG TARGETARCH=amd64
          ARG BUILD_ARCH
          ARG ARCH=amd64
          ARG NO_MONGODB=false
          RUN chmod +x /install.sh && /install.sh && rm -f /install.sh
          WORKDIR /opt/tplink/EAPController/lib
          EXPOSE 29810/udp 29811 29812 29813
          VOLUME ["/data"]
          ENTRYPOINT ["/entrypoint.sh"]
          CMD ["/usr/bin/java", "-server", "-Xms128m", "-Xmx1024m"]
          EOF
          
          echo "Dockerfile created successfully"
          cat homeassistant-addons/omada-controller/Dockerfile

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          INSTALL_VER: ${{ env.INSTALL_VER }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "Building with INSTALL_VER=${INSTALL_VER}"
          
          # Build the Docker image
          docker buildx build \
            --build-arg INSTALL_VER="${INSTALL_VER}" \
            --build-arg ARCH=amd64 \
            --build-arg TARGETARCH=amd64 \
            --build-arg BUILD_ARCH=amd64 \
            --platform linux/amd64 \
            --tag ${DOCKERHUB_USERNAME}/custom-omada:${INSTALL_VER} \
            --tag ${DOCKERHUB_USERNAME}/custom-omada:latest \
            --push \
            ./homeassistant-addons/omada-controller
          
          echo "Build and push completed successfully"
