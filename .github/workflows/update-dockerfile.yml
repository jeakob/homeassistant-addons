name: Build and Push Trilium Docker Image
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Clone upstream Trilium repo
        run: git clone --depth 1 https://github.com/TriliumNext/Notes.git
        
      - name: Install dependencies (workspace root)
        working-directory: Notes
        run: |
          # Remove problematic patchedDependencies to avoid patch application errors
          if [ -f "package.json" ]; then
            # Create a backup
            cp package.json package.json.backup
            # Remove patchedDependencies section using node
            node -e "
              const fs = require('fs');
              const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
              if (pkg.pnpm && pkg.pnpm.patchedDependencies) {
                delete pkg.pnpm.patchedDependencies;
                fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
                console.log('Removed patchedDependencies from package.json');
              }
            "
          fi
          # Install dependencies
          pnpm install --no-frozen-lockfile
        
      - name: Build client and server with Nx
        working-directory: Notes
        run: |
          npx nx run client:build
          npx nx run server:build
          
      - name: Fetch upstream Dockerfile
        run: |
          curl -o Dockerfile https://raw.githubusercontent.com/TriliumNext/Notes/develop/apps/server/Dockerfile.alpine
          # Verify the file was downloaded
          ls -la Dockerfile
          
      - name: Update WORKDIR to /data in Dockerfile
        run: |
          # Check original content
          echo "Original Dockerfile content:"
          cat Dockerfile
          # Update WORKDIR
          sed -i 's|^WORKDIR .*|WORKDIR /data|' Dockerfile
          # Show updated content
          echo "Updated Dockerfile content:"
          cat Dockerfile
          
      - name: Prepare Docker build context
        run: |
          # Verify source directories exist
          echo "Checking source directories:"
          ls -la Notes/apps/server/
          ls -la Notes/apps/server/dist/ || echo "dist directory not found"
          
          # Copy the built server dist output
          if [ -d "Notes/apps/server/dist" ]; then
            cp -r Notes/apps/server/dist ./dist
          else
            echo "Warning: dist directory not found, checking for alternative build output"
            find Notes -name "dist" -type d
          fi
          
          # Copy package.json and other required files
          cp Notes/apps/server/package.json ./
          cp Notes/pnpm-workspace.yaml ./
          
          # Copy the startup script if it exists
          if [ -f "Notes/apps/server/start-docker.sh" ]; then
            cp Notes/apps/server/start-docker.sh ./
          else
            echo "Warning: start-docker.sh not found"
          fi
          
          # Show final build context
          echo "Final build context:"
          ls -la
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t jeakob/trilium-custom:latest .
          
      - name: Push Docker image
        # Only push on main branch, not on pull requests
        if: github.ref == 'refs/heads/main'
        run: docker push jeakob/trilium-custom:latest
